// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrcamentosIfc;

namespace OrcamentosIfc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231121021355_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ComposicaoAnalitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoAgrupador")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("CodigoComposicao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<decimal>("CustoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoAgrupador")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("DescricaoClasse")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("DescricaoComposicao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("DescricaoTipo1")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("ItemCodigo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<decimal>("ItemCoeficiente")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ItemCustoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemDescricao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("ItemOrigemPreco")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<decimal>("ItemPrecoUnitario")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemTipo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("ItemUnidade")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("OrigemPreco")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Prefixo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("SiglaClasse")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("SiglaTipo1")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Unidade")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Vinculo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ComposicoesAnaliticas");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ComposicaoSintetica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoAgrupador")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("CodigoComposicao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<decimal>("CustoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoAgrupador")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("DescricaoClasse")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("DescricaoComposicao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("DescricaoTipo1")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("OrigemPreco")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Prefixo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("SiglaClasse")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("SiglaTipo1")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Unidade")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Vinculo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ComposicoesSinteticas");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoComposicaoAnalitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComposicaoAnaliticaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dimensao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ElementoProjetoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(12, 6)");

                    b.HasKey("Id");

                    b.HasIndex("ComposicaoAnaliticaId");

                    b.HasIndex("ElementoProjetoId");

                    b.ToTable("ElementoComposicaoAnalitica");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoComposicaoSintetica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComposicaoSinteticaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dimensao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ElementoProjetoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(12, 6)");

                    b.HasKey("Id");

                    b.HasIndex("ComposicaoSinteticaId");

                    b.HasIndex("ElementoProjetoId");

                    b.ToTable("ElementoComposicaoSintetica");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dimensao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ElementoProjetoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InsumoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(12, 6)");

                    b.HasKey("Id");

                    b.HasIndex("ElementoProjetoId");

                    b.HasIndex("InsumoId");

                    b.ToTable("ElementoInsumo");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoProjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IfcId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ElementosProjeto");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("OrigemPreco")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prefixo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("Unidade")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoComposicaoAnalitica", b =>
                {
                    b.HasOne("OrcamentosIfc.Data.Models.ComposicaoAnalitica", "ComposicaoAnalitica")
                        .WithMany()
                        .HasForeignKey("ComposicaoAnaliticaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrcamentosIfc.Data.Models.ElementoProjeto", "ElementoProjeto")
                        .WithMany("ComposicoesAnaliticas")
                        .HasForeignKey("ElementoProjetoId");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoComposicaoSintetica", b =>
                {
                    b.HasOne("OrcamentosIfc.Data.Models.ComposicaoSintetica", "ComposicaoSintetica")
                        .WithMany()
                        .HasForeignKey("ComposicaoSinteticaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrcamentosIfc.Data.Models.ElementoProjeto", "ElementoProjeto")
                        .WithMany("ComposicoesSinteticas")
                        .HasForeignKey("ElementoProjetoId");
                });

            modelBuilder.Entity("OrcamentosIfc.Data.Models.ElementoInsumo", b =>
                {
                    b.HasOne("OrcamentosIfc.Data.Models.ElementoProjeto", "ElementoProjeto")
                        .WithMany("Insumos")
                        .HasForeignKey("ElementoProjetoId");

                    b.HasOne("OrcamentosIfc.Data.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
